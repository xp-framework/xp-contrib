Aftermath: TODO
=======================================================================

COMMENT
-----------------------------------------------------------------------
+ Check Class API doc comments
+ Check Method API doc comments
+ Compact consecutive one-line comments
+ Forbid Perl-style comments
+ Catch TODO/FIXME/HACK/etc. keywords

LAYOUT
-----------------------------------------------------------------------
+ End with PHP close-tag
+ Line length
+ Newline after closing-brace
+ Newline after opening-brace
+ Newline before closing-brace
+ No content outside class
+ No $variables in strings
+ One class per file
+ Only one PHP open-tag
+ One statement per line
+ Start with PHP open-tag
+ Strings in single-quotes

- Comparison to constants: if (NULL === $variable)
- File encoding UTF-8
- Avoid using statements without using curly braces: if, for, do, while

NAMING
-----------------------------------------------------------------------
+ Class name in CamelCase
+ Class name match file name
+ Constant names in ALL_CAPS
+ Keywords in lower case
+ Method name in camelCase
+ PHP5 style constructor
+ Predefined constant name in ALL_CAPS
+ Variable name in $camelCase

- Short variable name outside for() counters: $a= ...
- Variable name too long: $veryVeryVeryLongVariableName= ...

STATEMENT
-----------------------------------------------------------------------
+ Method must have scope defined: private, protected, public
+ Discourage @ usage
+ Forbid declare() usage
+ Discourage eval() usage
+ Forbid exit() and die() usage
+ No global variable scope
+ Forbid goto usage
+ Forbid include() usage
+ Forbid require() usage
+ Forbid super-globals usage: $_SERVER

- Class fields must have scope defined: private, protected, public
- Return as language-construct not as function: return(3) = fail
- Catch functions print_r, error_log, var_dump, echo
- Discourages the use of deprecated functions that are kept in PHP for
  compatibility with older versions
- Discourage PHP alias functions: sizeof, delete

WHITESPACE
-----------------------------------------------------------------------
+ Empty line before comment line
+ No tabs
+ No trailing whitespace
+ No two consecutive empty lines
+ No whitespace after cast statement
+ No whitespace after open parenthesis
+ No whitespace before and after arrow operator
+ No whitespace before and after concatenation operator
+ No whitespace before and after double-colon operator
+ No whitespace before assignment
+ No whitespace before close parenthesis
+ One space after comma
+ One space after inline comment
+ One space after keyword
+ One space after operator
+ One space before and after the double-arrow operator
+ One space before and after the short-ternary operator

- One space after ; in for()
- Blank line between methods
- Identation by 2 spaces
- Align consecutive assignments

POSSIBLE BUGS
-----------------------------------------------------------------------
- Catch if(TRUE) and if(FALSE)
- Switch statements should have a 'default'
- Deeply nested ifs

PERFORMANCE
-----------------------------------------------------------------------
- Unused function parameters
- Catch the use of size-based functions in loop conditions
- Useless overriding method: $this::parent()
- When a class has the final modifier, all the methods are final
- Unused imports: uses('unused.import.Class')
- Avoid duplicate literals
- Unused fields
- Unused private method
- Unused local variable

CODESIZE
-----------------------------------------------------------------------
- Excessive method length
- Excessive class length
- Too many methods
- Too many members
- Long parameter list
- Cyclomatic complexity
- Method NPath complexity
