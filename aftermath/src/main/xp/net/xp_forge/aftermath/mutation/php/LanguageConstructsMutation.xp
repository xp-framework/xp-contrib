/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package net.xp_forge.aftermath.mutation.php;

import net.xp_forge.aftermath.Deed;
import net.xp_forge.aftermath.DeedUtils;
import net.xp_forge.aftermath.Mutation;

import native standard.strtolower;

/**
 * Adds support for the following language constructs:
 *
 * - A_FINALLY:
 *   try {
 *   } catch() {
 *   } finally(); {
 *   }
 *
 * - A_WITH:
 *   with (); {
 *   }
 *
 */
public class LanguageConstructsMutation implements Mutation {

  /**
   * @inheritDoc
   *
   */
  public void apply(Deed $deed) {

    // A_FINALLY
    if (
      'T_STRING' === $deed.name &&
      ('finally' === strtolower($deed.description)) &&
      null !== ($next= DeedUtils::getNextNonWhitespace($deed)) &&
      'A_OPEN_PARENTHESIS' === $next.name &&
      null !== ($next= DeedUtils::getNextNonWhitespace($next)) &&
      'A_CLOSE_PARENTHESIS' === $next.name &&
      null !== ($next= DeedUtils::getNextNonWhitespace($next)) &&
      'A_SEMICOLON' === $next.name &&
      null !== ($last= $next.next)
    ) {

      // Rename Deed
      $deed.name= 'A_FINALLY';

      // Build description and remove Deeds until $last
      while (null !== ($next= $deed.next) && !$next.is($last.name, $last.description)) {
        $deed.description~= $next.description;
        DeedUtils::removeDeed($next);
      }
    }
  }
}
