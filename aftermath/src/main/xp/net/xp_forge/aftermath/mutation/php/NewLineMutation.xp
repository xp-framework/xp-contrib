/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package net.xp_forge.aftermath.mutation.php;

import util.Observer;
import util.Observable;

import net.xp_forge.aftermath.Deed;
import net.xp_forge.aftermath.Mutation;
import net.xp_forge.aftermath.DeedUtils;

import native standard.strpos;
import native standard.substr;

/**
 * Split whitespace containing NEWLINEs
 *
 */
public class NewLineMutation implements Mutation {

  /**
   * @inheritDoc
   *
   */
  public void apply(Deed $deed) {
    if ('T_WHITESPACE' !== $deed.name || false === ($pos= strpos($deed.description, "\n"))) return;

    // Split decription by the first NEWLINE
    $before = substr($deed.description, 0, $pos);
    $after  = substr($deed.description, $pos+ 1);

    // Update Deed description with $before value; if NEWLINE is not the first character
    if (0 !== $pos) {
      $deed.description= $before;

      // Add an A_NEWLINE Deed
      $deed= DeedUtils::addDeedAfter($deed, new Deed($deed.soul, 'A_NEWLINE', "\n"));

    // NEWLINE is the first character
    } else {
      $deed.name        = 'A_NEWLINE';
      $deed.description = "\n";
    }

    // Add a T_WHITESPACE Deed containing the rest of the whitespace; if NEWLINE is not the last character
    if (false !== $after) {
      DeedUtils::addDeedAfter($deed, new Deed($deed.soul, 'T_WHITESPACE', $after));
    }
  }
}
