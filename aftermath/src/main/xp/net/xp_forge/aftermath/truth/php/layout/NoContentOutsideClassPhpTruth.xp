/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package net.xp_forge.aftermath.truth.php.layout;

import net.xp_forge.aftermath.Deed;
import net.xp_forge.aftermath.truth.PhpTruth;

import native standard.in_array;

/**
 * Enforces that there is no content outside class definition
 *
 * @test xp://unittest.net.xp_forge.aftermath.truth.php.layout.NoContentOutsideClassPhpTruthTest
 */
[
  @severity('blocker'),
  @name('No content outside class'),
  @message('There is content outside the class definition')
]
public class NoContentOutsideClassPhpTruth extends PhpTruth {
  protected static string[] $allowedDeeds= [
    'T_WHITESPACE',
    'A_NEWLINE',
    'T_COMMENT',
    'T_DOC_COMMENT',
    'A_MULTILINE_COMMENT',
    'A_PERL_COMMENT',
    'A_ANNOTATION',
    'T_OPEN_TAG',
    'T_CLOSE_TAG',
    'T_PUBLIC',
    'T_ABSTRACT'
   ];

  protected bool $inUsesContext    = false;
  protected int  $braceLevel       = 0;
  protected int  $lastReportedYear = 0;

  /**
   * @inheritDoc
   *
   */
  public bool forbids(Deed $deed) {
    if (null !== $deed.quest) return false;

    // Reset state on new Soul
    if (null === $deed.previous) {
      $this.inUsesContext    = false;
      $this.lastReportedYear = 0;
    }

    // Enter uses() context
    if ($deed.is('T_STRING', 'uses')) {
      $this.inUsesContext= true;
      return false;
    }

    // Exit uses() context
    if (true === $this.inUsesContext && 'A_SEMICOLON' === $deed.name) {
      $this.inUsesContext= false;
      return false;
    }

    // The only allowed Deeds outside class context is whitespace and comments
    if (
      false === $this.inUsesContext &&
      null !== ($deedBegin= $deed.begin) &&
      $deedBegin.year !== $this.lastReportedYear &&
      !in_array($deed.name, self::$allowedDeeds)
    ) {
      $this.lastReportedYear= $deedBegin.year;
      return true;
    }

    return false;
  }
}
