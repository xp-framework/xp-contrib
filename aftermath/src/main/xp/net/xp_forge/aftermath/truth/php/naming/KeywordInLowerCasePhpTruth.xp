/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package net.xp_forge.aftermath.truth.php.naming;

import net.xp_forge.aftermath.Deed;
import net.xp_forge.aftermath.truth.PhpTruth;

import native standard.in_array;
import native standard.strtolower;

/**
 * Enforces that there is one SPACE character after every keyword
 *
 * @test xp://unittest.net.xp_forge.aftermath.truth.php.naming.KeywordInLowerCasePhpTruthTest
 */
[
  @severity('major'),
  @name('Keywords in lower case'),
  @message('Keyword is not in lower case')
]
public class KeywordInLowerCasePhpTruth extends PhpTruth {
  protected static string[] $keywords= [
    'T_ABSTRACT',
    'T_AS',
    'T_CASE',
    'T_CATCH',
    'T_CLASS',
    'T_DO',
    'T_ELSE',
    'T_ELSEIF',
    'T_EXTENDS',
    'T_FINAL',
    'T_FOR',
    'T_FOREACH',
    'T_FUNCTION',
    'A_METHOD',
    'T_IF',
    'T_IMPLEMENTS',
    'T_INTERFACE',
    'T_SWITCH',
    'T_THROW',
    'T_TRY',
    'T_WHILE'
  ];

  /**
   * @inheritDoc
   *
   */
  public bool forbids(Deed $deed) {
    return (in_array($deed.name, self::$keywords) && strtolower($deed.description) !== $deed.description);
  }
}
