/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package net.xp_forge.aftermath.truth.php.naming;

import net.xp_forge.aftermath.Deed;
import net.xp_forge.aftermath.DeedUtils;
import net.xp_forge.aftermath.truth.PhpTruth;

import native standard.strpos;
import native standard.substr;
import native standard.ucfirst;
import native standard.in_array;

/**
 * Enforces that all method names must use the camelCase() notation
 *
 * Exception:
 * - functions outside class definition
 * - __magic() methods
 * - methods in unittests can use the_underscore() notation
 * - streamWrapper methods
 *
 * @test xp://unittest.net.xp_forge.aftermath.truth.php.naming.MethodNameInCamelCasePhpTruthTest
 */
[
  @severity('critical'),
  @name('Method name in camelCase'),
  @message('Method name does not use the camelCase() notation')
]
public class MethodNameInCamelCasePhpTruth extends PhpTruth {
  private static string[] $streamWrapperMethods= [
    'dir_closedir',
    'dir_opendir',
    'dir_readdir',
    'dir_rewinddir',
    'stream_cast',
    'stream_close',
    'stream_eof',
    'stream_flush',
    'stream_lock',
    'stream_metadata',
    'stream_open',
    'stream_read',
    'stream_seek',
    'stream_set_option',
    'stream_stat',
    'stream_tell',
    'stream_write',
    'url_stat'
  ];

  /**
   * @inheritDoc
   *
   */
  public bool forbids(Deed $deed) {
    if ('A_METHOD' !== $deed.name || null === ($feat= $deed.feat) || null === ($quest= $deed.quest)) return false;
    $name= $feat.name;

    // Ignore methods in unittests: shouls_allow_null_values()
    if ($quest.isDrill()) return false;

    // Ignore magic methods (__method) and protected methods (_method)
    if ('_' === substr($name, 0, 1)) return false;

    // Ignore streamWrapper methods
    if (in_array($name, self::$streamWrapperMethods)) return false;

    return (
      false !== strpos($name, '_') ||         // contains underscores '_'
      $name === ucfirst($name)                // Starts with upper-case letter
    );
  }
}
