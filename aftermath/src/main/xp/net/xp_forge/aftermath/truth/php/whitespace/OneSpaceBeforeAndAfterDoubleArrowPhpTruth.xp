/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package net.xp_forge.aftermath.truth.php.whitespace;

import net.xp_forge.aftermath.Deed;
import net.xp_forge.aftermath.DeedUtils;
import net.xp_forge.aftermath.truth.PhpTruth;

/**
 * Enforces that there is one SPACE character before and after
 * the double-arrow operator '=>'
 *
 * Exception:
 * - Aligned defines:
 *   $a= array(
 *     20  => 'zwanzig',
 *     4   => 'vier',
 *     100 => 'hundert'
 *   )     ^
 *         | aligned defines
 *
 * @test xp://unittest.net.xp_forge.aftermath.truth.php.whitespace.OneSpaceBeforeAndAfterDoubleArrowPhpTruthTest
 */
[
  @severity('minor'),
  @name('One space before and after the double-arrow operator'),
  @message('There must be one SPACE character before and after the double-arrow operator')
]
public class OneSpaceBeforeAndAfterDoubleArrowPhpTruth extends PhpTruth {

  /**
   * @inheritDoc
   *
   */
  public bool forbids(Deed $deed) {
    if (
      'T_DOUBLE_ARROW' !== $deed.name ||
      null === ($previous= $deed.previous) ||
      null === ($next= $deed.next)
    ) return false;

    // Must have exactly one SPACE after and at least one SPACE before
    if (!$next.is('T_WHITESPACE', ' ') || 'T_WHITESPACE' !== $previous.name) return true;

    // Exactly one SPACE before: good
    if ($previous.is('T_WHITESPACE', ' ')) return false;

    // Ignore aligned assignments
    if (DeedUtils::isAligned($deed)) return false;

    // Got ya!
    return true;
  }
}
