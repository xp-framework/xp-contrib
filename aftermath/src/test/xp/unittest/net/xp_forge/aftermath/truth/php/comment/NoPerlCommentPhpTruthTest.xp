/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package unittest.net.xp_forge.aftermath.truth.php.comment;

import unittest.net.xp_forge.aftermath.truth.php.PhpTruthTest;

/**
 * Testcase
 *
 * @see xp://net.xp_forge.aftermath.truth.php.comment.NoPerlCommentPhpTruth
 */
[@truth(class= 'net.xp_forge.aftermath.truth.php.comment.NoPerlCommentPhpTruth')]
public class NoPerlCommentPhpTruthTest extends PhpTruthTest {

  /**
   * Catch Perl-style comments
   *
   * @return void
   */
  [@test]
  public void should_catch_perl_comments() {
    $sins= $this.getSins('<?php
      # This is a Perl-style comment
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Ignore "//" comments
   *
   * @return void
   */
  [@test]
  public void should_ignore_slash_slash_comments() {
    $sins= $this.getSins('<?php
      // This is a C++ like comment
    ?>');
    $this.assertEquals(0, $sins.length);
  }

  /**
   * Ignore "/*" comments
   *
   * @return void
   */
  [@test]
  public void should_ignore_multiline_comments() {
    $sins= $this.getSins('<?php
      /* This is a multiline comment */
    ?>');
    $this.assertEquals(0, $sins.length);
  }

  /**
   * Ignore "/**" comments
   *
   * @return void
   */
  [@test]
  public void should_ignore_apidoc_comments() {
    $sins= $this.getSins('<?php
      /**
       * This is an API doc comment
       *
       */
    ?>');
    $this.assertEquals(0, $sins.length);
  }

  /**
   * Ignore annotation comments
   *
   * @return void
   */
  [@test]
  public void should_ignore_annotation_comments() {
    $sins= $this.getSins('<?php
      #[@test]
    ?>');
    $this.assertEquals(0, $sins.length);
  }

  /**
   * Ignore multi-line annotation comments
   *
   * @return void
   */
  [@test]
  public void should_ignore_multiline_annotation_comments() {
    $sins= $this.getSins('<?php
      #[
      # @test
      #]
    ?>');
    $this.assertEquals(0, $sins.length);
  }
}
