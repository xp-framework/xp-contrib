/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package unittest.net.xp_forge.aftermath.truth.php.naming;

import unittest.net.xp_forge.aftermath.truth.php.PhpTruthTest;

/**
 * Testcase
 *
 * @see xp://net.xp_forge.aftermath.truth.php.naming.MethodNameInCamelCasePhpTruth
 */
[@truth(class= 'net.xp_forge.aftermath.truth.php.naming.MethodNameInCamelCasePhpTruth')]
public class MethodNameInCamelCasePhpTruthTest extends PhpTruthTest {

  /**
   * Catch bad method names
   *
   * @return void
   */
  [@test]
  public void should_catch_bad_method_names() {
    $sins= $this.getSins('<?php
      public class DummyTestClass {
        public abstract function BadName() {   // wrong
        }
        public function Bad_Again() {          // wrong
        }
        protected function correctName() {     // correct
        }
        protected function correct() {         // correct
        }
        private function still_bad() {         // wrong
        }
      }
    ?>');
    $this.assertEquals(3, $sins.length);
  }

  /**
   * Ignore streamWrapper methods
   *
   * @return void
   */
  [@test]
  public void should_ignore_streamwrapper_methods() {
    $sins= $this.getSins('<?php
      public class DummyTestClass {
        public function dir_closedir() {}
        public function dir_opendir() {}
        public function dir_readdir() {}
        public function dir_rewinddir() {}
        public function stream_cast() {}
        public function stream_close() {}
        public function stream_eof() {}
        public function stream_flush() {}
        public function stream_lock() {}
        public function stream_metadata() {}
        public function stream_open() {}
        public function stream_read() {}
        public function stream_seek() {}
        public function stream_set_option() {}
        public function stream_stat() {}
        public function stream_tell() {}
        public function stream_write() {}
        public function url_stat() {}
      }
    ?>');
    $this.assertEquals(0, $sins.length);
  }

  /**
   * Ignore __magic() methods
   *
   * @return void
   */
  [@test]
  public void should_ignore_magic_methods() {
    $sins= $this.getSins('<?php
      public class DummyTestClass {
        public function __construct() {
        }
        public function __this_is_magic() {
        }
      }
    ?>');
    $this.assertEquals(0, $sins.length);
  }

  /**
   * Ignore functions outside class declaration
   *
   * @return void
   */
  [@test]
  public void should_ignore_functions_outside_class_declaration() {
    $sins= $this.getSins('<?php
      function i_am_not_a_method() {}
      function i_am_a_function() {}
    ?>');
    $this.assertEquals(0, $sins.length);
  }
}
