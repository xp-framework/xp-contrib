/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package unittest.net.xp_forge.aftermath.truth.php.whitespace;

import unittest.net.xp_forge.aftermath.truth.php.PhpTruthTest;

/**
 * Testcase
 *
 * @see xp://net.xp_forge.aftermath.truth.php.whitespace.NoWhitespaceAfterCastPhpTruth
 */
[@truth(class= 'net.xp_forge.aftermath.truth.php.whitespace.NoWhitespaceAfterCastPhpTruth')]
public class NoWhitespaceAfterCastPhpTruthTest extends PhpTruthTest {

  /**
   * Catch whitespace after (array) cast
   *
   * @return void
   */
  [@test]
  public void should_catch_whitespace_after_array_cast() {
    $sins= $this.getSins('<?php
      $a= (array) $b;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch whitespace after (bool) cast
   *
   * @return void
   */
  [@test]
  public void should_catch_whitespace_after_bool_cast() {
    $sins= $this.getSins('<?php
      $a= (bool) $b;
      $a= (boolean) $b;

    ?>');
    $this.assertEquals(2, $sins.length);
  }

  /**
   * Catch whitespace after (double) cast
   *
   * @return void
   */
  [@test]
  public void should_catch_whitespace_after_double_cast() {
    $sins= $this.getSins('<?php
      $a= (real) $b;
      $a= (double) 10;
      $a= (float) "23.34";
    ?>');
    $this.assertEquals(3, $sins.length);
  }

  /**
   * Catch whitespace after (int) cast
   *
   * @return void
   */
  [@test]
  public void should_catch_whitespace_after_int_cast() {
    $sins= $this.getSins('<?php
      $a= (int) $b;
      $a= (integer) $b;
    ?>');
    $this.assertEquals(2, $sins.length);
  }

  /**
   * Catch whitespace after (object) cast
   *
   * @return void
   */
  [@test]
  public void should_catch_whitespace_after_object_cast() {
    $sins= $this.getSins('<?php
      $a= (object) $b;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch whitespace after (string) cast
   *
   * @return void
   */
  [@test]
  public void should_catch_whitespace_after_string_cast() {
    $sins= $this.getSins('<?php
      $a= (string) $b;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch whitespace after (unset) cast
   *
   * @return void
   */
  [@test]
  public void should_catch_whitespace_after_unset_cast() {
    $sins= $this.getSins('<?php
      $a= (unset) $b;
    ?>');
    $this.assertEquals(1, $sins.length);
  }


  /**
   * Ignore correct usage
   *
   * @return void
   */
  [@test]
  public void should_ignore_correct_usage() {
    $sins= $this.getSins('<?php
      $a= (array)$b;
      $a= (bool)$b;
      $a= (boolean)$b;
      $a= (real)$b;
      $a= (double)10;
      $a= (float)"23.34";
      $a= (int)$b;
      $a= (integer)$b;
      $a= (object)$b;
      $a= (string)$b;
      $a= (unset)$b;
    ?>');
    $this.assertEquals(0, $sins.length);
  }
}
