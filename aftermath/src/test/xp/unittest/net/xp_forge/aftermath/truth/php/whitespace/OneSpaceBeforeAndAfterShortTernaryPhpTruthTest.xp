/**
 * This file is part of the XP-Framework
 *
 * Aftermath
 * Copyright (c) 2011, XP-Framework Team
 */
package unittest.net.xp_forge.aftermath.truth.php.whitespace;

import unittest.net.xp_forge.aftermath.truth.php.PhpTruthTest;

/**
 * Testcase
 *
 * @see xp://net.xp_forge.aftermath.truth.php.whitespace.OneSpaceBeforeAndAfterShortTernaryPhpTruth
 */
[@truth(class= 'net.xp_forge.aftermath.truth.php.whitespace.OneSpaceBeforeAndAfterShortTernaryPhpTruth')]
public class OneSpaceBeforeAndAfterShortTernaryPhpTruthTest extends PhpTruthTest {

  /**
   * Ignore correct usage of "?:"
   *
   * @return void
   */
  [@test]
  public void should_ignore_correct_usage_of_short_ternary_operator() {
    $sins= $this.getSins('<?php
      $a= $b ?: $c;
      $d= $e ?: false;
      $f= $g ?: "string";
    ?>');
    $this.assertEquals(0, $sins.length);
  }

  /**
   * Catch missing SPACE before "?:"
   *
   * @return void
   */
  [@test]
  public void should_catch_missing_space_before_short_ternary_operator() {
    $sins= $this.getSins('<?php
      $a= $b?: $c;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch extra SPACE before "?:"
   *
   * @return void
   */
  [@test]
  public void should_catch_extra_space_before_short_ternary_operator() {
    $sins= $this.getSins('<?php
      $a= $b  ?: $c;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch missing SPACE after "?:"
   *
   * @return void
   */
  [@test]
  public void should_catch_missing_space_after_short_ternary_operator() {
    $sins= $this.getSins('<?php
      $a= $b ?:$c;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch extra SPACE after "?:"
   *
   * @return void
   */
  [@test]
  public void should_catch_extra_space_after_short_ternary_operator() {
    $sins= $this.getSins('<?php
      $a= $b ?:  $c;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch missing SPACE before and after "?:"
   *
   * @return void
   */
  [@test]
  public void should_catch_missing_space_before_and_after_short_ternary_operator() {
    $sins= $this.getSins('<?php
      $a= $b?:$c;
    ?>');
    $this.assertEquals(1, $sins.length);
  }

  /**
   * Catch extra SPACE before and after "?:"
   *
   * @return void
   */
  [@test]
  public void should_catch_extra_space_before_and_after_short_ternary_operator() {
    $sins= $this.getSins('<?php
      $a= $b  ?:  $c;
    ?>');
    $this.assertEquals(1, $sins.length);
  }
}
